/* ========================================== */
/* üìö CSS GRUNDLAGEN - WIE FUNKTIONIERT CSS? */
/* ========================================== */

/*
CSS SYNTAX ERKL√ÑRUNG:

AUFBAU EINER CSS-REGEL:
selektor {
    eigenschaft: wert;
    eigenschaft: wert;
}

BEISPIEL:
h1 {
    color: red;
    font-size: 24px;
}

BEDEUTUNG:
- "h1" = SELEKTOR (w√§hlt alle <h1> Elemente aus)
- "color" = EIGENSCHAFT (was soll ge√§ndert werden?)
- "red" = WERT (wie soll es ge√§ndert werden?)
- ";" = TRENNT verschiedene Eigenschaften
- "{}" = UMSCHLIESSEN alle Regeln f√ºr diesen Selektor
*/

/* ========================================== */
/* üéØ SELEKTOR-ARTEN IN CSS                   */
/* ========================================== */

/*
VERSCHIEDENE WEGE, HTML-ELEMENTE AUSZUW√ÑHLEN:

1. UNIVERSAL SELEKTOR:
   * { } = W√§hlt ALLE Elemente aus

2. ELEMENT SELEKTOR:
   h1 { } = W√§hlt alle <h1> Elemente
   p { } = W√§hlt alle <p> Elemente
   div { } = W√§hlt alle <div> Elemente

3. ID SELEKTOR:
   #meinID { } = W√§hlt Element mit id="meinID"
   
4. CLASS SELEKTOR:
   .meineKlasse { } = W√§hlt alle Elemente mit class="meineKlasse"

5. KOMBINATION:
   div.meineKlasse { } = Nur <div> Elemente MIT der Klasse
*/

/* ========================================== */


  /*========================================= */
  /*-- üé® CSS STYLING - KOMPLETTES UI DESIGN    */
  /*-- ========================================= */

  /*ALle HTML-Elemente ausw√§hlen*/
  *{
    margin:0; /*Au√üenabstand auf 0 setzen*/
    padding:0; /*Innenabstand auf 0 setzen*/

    /* box-sizzing= Wie wird die gr√∂√üe berrechnet?
       content-box: Breite +padding +border= Gesamtbreite (Standard)
    Breite INKLUSIVE padding + border = Gesamtbreite (besser!) */
    box-sizing: border-box;
}
/* ========================================== */
/* üé® BODY STYLING - DAS GRUND-LAYOUT        */
/* ========================================== */
body { /*w√§hlt das body Elemt aus*/ 
/*font-family= Schriftarten*/
font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; /*Schriftart festlegen*/

 /*  radial-gradient = Kreisf√∂rmiger Verlauf
       - ellipse at bottom = Oval-Form, startet unten
       - #1b2735 0% = Erste Farbe (dunkelblau) bei 0%
       - #090a0f 100% = Zweite Farbe (schwarz) bei 100% */
background: radial-gradient(ellipse at bottom, #1b2735 0%, #090a0f 100%);

/* overflow = Was passiert bei √úberlauf?
       - hidden = √úberstehender Inhalt wird abgeschnitten
       - scroll = Scrollbalken erscheinen
       - visible = Alles wird angezeigt (Standard) */
    overflow: hidden;
    
    /* color = Textfarbe (Standard f√ºr alle Kinder-Elemente) */
    color: white;
}


/* ========================================== */
/* üñºÔ∏è 3D CANVAS - WO THREE.JS HINZEICHNET   */
/* ========================================== */



/* ========================================== */
/* üîÑ LOADING SCREEN - LADE-BILDSCHIRM       */
/* ========================================== */
#loadingOverlay {
     position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    background: linear-gradient(135deg, #66733a 0%, #764ba2 100%);
    /*Flexbox f√ºr perfekte Zentrierung des Inhalts*/
    display:flex; 
    flex-direction: column; /*Stapelt Elemente vertikal*/
    justify-content: center; /*Zentriert vertikal*/
    align-items: center; /*Zentriert horizontal*/
    /* z-index h√∂her als gameUI, damit Loading Screen √ºber allem liegt
    z-index: 200  ‚Üê Loading Screen (ganz oben)
    z-index: 100  ‚Üê Game UI (dar√ºber)
    z-index: 0    ‚Üê 3D Canvas (unten) */
    z-index: 200;
    /* transition = Sanfte Animation beim Ein-/Ausblenden
       opacity = Transparenz (0 = unsichtbar, 1 = sichtbar)
       0.5s = Animation dauert eine halbe Sekunde
       ease = Nat√ºrliche Animations-Kurve */
    transition: opacity 0.5s ease;
}

.loading-content {
    text-align:center;

}

.loading-title {
    font-size: 48px;
    font-weight:bold;
    margin-bottom: 20px;
    text-shadow: 2px 2px 4px rgba(255, 255, 255, 0.3);


}

.loading-progress {
   width: 300px;
   height: 6px;
   background: rgba(255, 255, 255, 0.3); 
   border-radius: 3px;
   overflow: hidden; 
   margin: 20px 0;

}

.loading-progress-bar {
    height: 100%;
    background: linear-gradient(90deg, #00ff88 0%, #00ccff 100%);
    width: 0%; /* startet bei 0%, wird dann von JavaScript ge√§ndert*/
    transition: width 0.3s ease; /* Sanfte Animation beim Fortschrittsbalken */
    border-radius: 3px; /* <- Semikolon hinzugef√ºgt */
}
 
.error-message {
    color: #ff6b6b;
    background: rgba(255,107,107,0.1);
    border: 1px solid #ff6b6b;
    padding: 10px;
    border-radius: 5px;
    margin-top: 20px;
    display: none; /* Standardm√§√üig versteckt */
}   

/* UI PANELS HINZUF√úGEN */
#gameUI {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 100;
}

.ui-panel {
    position: absolute;
    background: rgba(0, 0, 0, 0.7);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 10px;
    padding: 15px;
    pointer-events: auto;
}

.top-left {
    top: 20px;
    left: 20px;
}

.top-right {
    top: 20px;
    right: 20px;
}

.bottom-center {
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    text-align: center;
}

.stat-item {
    margin: 5px 0;
    display: flex;
    justify-content: space-between;
    min-width: 150px;
}

.controls-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 10px;
    font-size: 14px;
}

